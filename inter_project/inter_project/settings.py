"""
Django settings for inter_project project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import sys
from pathlib import Path
import os

# 项目根目录路径配置
BASE_DIR = Path(__file__).resolve().parent.parent  # 获取项目根目录绝对路径
sys.path.append(str(BASE_DIR))
# ==================== 安全相关配置 ====================
SECRET_KEY = 'django-insecure-33rfx5x6u-a1f-n#j!_ehyxk^bozmwu(&5xm*ky40=(dxbuj3s'  # 项目密钥（生产环境必须更改）
DEBUG = True  # 调试模式开关（生产环境必须关闭）
ALLOWED_HOSTS = ['*']  # 允许访问的主机（生产环境需指定具体域名）

# ==================== 应用配置 ====================
INSTALLED_APPS = [
    # Django 内置应用
    'django.contrib.admin',       # 管理员后台
    'django.contrib.auth',        # 认证系统
    'django.contrib.contenttypes', # 内容类型框架
    'django.contrib.sessions',    # 会话管理
    'django.contrib.messages',    # 消息框架
    'django.contrib.staticfiles', # 静态文件管理
    
    # 第三方应用
    'rest_framework',            # Django REST framework
    'drf_yasg',                  # API文档生成工具
    'django_apscheduler',        # 定时任务支持
    'django_cas_ng',  # 添加CAS认证应用
    # 本地应用
    'JobRecServer',  # 职业推荐主应用
    'api',                       # API接口应用
]

# ==================== 中间件配置 ====================
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',      # 安全中间件
    'django.contrib.sessions.middleware.SessionMiddleware', # 会话管理
    'django.middleware.common.CommonMiddleware',          # 通用中间件
    'django.middleware.csrf.CsrfViewMiddleware',          # CSRF保护
    'django.contrib.auth.middleware.AuthenticationMiddleware', # 认证管理
    'django.contrib.messages.middleware.MessageMiddleware',    # 消息框架
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # 点击劫持保护
]

# ==================== URL配置 ====================
ROOT_URLCONF = 'inter_project.urls'  # 主URL配置文件路径

# ==================== 模板配置 ====================
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # 模板搜索目录
        'APP_DIRS': True,  # 是否启用应用内模板搜索
        'OPTIONS': {
            'context_processors': [  # 上下文处理器
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ==================== WSGI配置 ====================
WSGI_APPLICATION = 'inter_project.wsgi.application'  # WSGI应用入口

# ==================== 数据库配置 ====================
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # 数据库引擎
        'NAME': BASE_DIR / 'db.sqlite3',         # 数据库文件路径
    }
}

# ==================== 密码验证配置 ====================
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # 检查与用户属性的相似性
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # 检查最小长度
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # 检查常见密码
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # 检查是否全数字
    },
]

# ==================== 国际化配置 ====================
LANGUAGE_CODE = 'zh-hans'  # 中文语言设置
TIME_ZONE = 'Asia/Shanghai'  # 上海时区
USE_I18N = True  # 启用国际化
USE_L10N = True  # 启用本地化
USE_TZ = True  # 使用时区

# ==================== 静态文件配置 ====================
STATIC_URL = '/static/'  # 静态文件URL前缀
STATIC_ROOT = BASE_DIR / 'staticfiles'  # 静态文件收集目录

# ==================== 媒体文件配置 ====================
MEDIA_URL = '/media/'  # 媒体文件URL前缀
MEDIA_ROOT = BASE_DIR / 'media'  # 媒体文件存储路径

# ==================== REST框架配置 ====================
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # 默认需要认证
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',  # 会话认证
        'rest_framework.authentication.BasicAuthentication',    # 基本认证
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',  # 分页类
    'PAGE_SIZE': 10  # 每页数据量
}

# ==================== 日志配置 ====================
LOG_DIR = BASE_DIR / 'logs'
LOG_DIR.mkdir(exist_ok=True, parents=True)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOG_DIR / 'debug.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'jobRec': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
        },
    },
}

# ==================== 定时任务配置 ====================
SCHEDULER_CONFIG = {
    "apscheduler.jobstores.default": {
        "type": "django"  # 使用Django作为任务存储
    },
    "apscheduler.executors.processpool": {
        "type": "threadpool",
        "max_workers": "20"  # 最大工作线程数
    },
}
SCHEDULER_AUTOSTART = True  # 自动启动定时任务

# ==================== 其他配置 ====================
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # 默认主键字段类型
